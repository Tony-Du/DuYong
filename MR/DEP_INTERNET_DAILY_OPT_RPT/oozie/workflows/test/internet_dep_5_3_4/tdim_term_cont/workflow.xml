<workflow-app xmlns='uri:oozie:workflow:0.1' name='internet_dep_recom_page_content-tdim_use_visit'>

	<!--page_pose_content_visit : 
	TERM_PROD_NAME, POSE_ID, POSE_NAME, PAGE_ID, PAGE_NAME, STATIS_DAY, CONTENT_ID, PROGRAM_NAME,
	VISIT_UV, VISIT_PV
	-->
	
	<!--page_pose_content_visit : 
	TERM_PROD_NAME, POSE_ID, POSE_NAME, PAGE_ID, PAGE_NAME, STATIS_DAY, CONTENT_ID, PROGRAM_NAME,
	USE_UV, USE_PV, USE_DUR, USE_FLOW
	-->
	
	<start to="fork_use_visit_cont" />
	
	
	<!--
	<join name="join_use_visit_cont" to=" " />
	-->
	<fork name="fork_use_visit_cont">
		<path start="use_term" />
		<path start="visit_term" />
	</fork>
	

	<!-- use_term: 
	${outputTmp}/use_term
	 TERM_PROD_ID, TERM_PROD_NAME,
	 STATIS_DAY, SERV_NUMBER, CONTENT_ID, USE_DUR, USE_FLOW, USE_PV	 
	-->
	<action name="use_term">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${outputTmp}/use_term" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queue}</value>
				</property>
				<property>
					<name>mapred.child.java.opts</name>
					<value>-Xmx1024m</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>1</value>
				</property>
				<property>
					<name>NameNode</name>
					<value>${nameNode}</value>
				</property>
			</configuration>
			<main-class>com.mganaly.utils.MainRunner</main-class>
			<arg>map_join_tool</arg>
			<arg>outpath=${outputTmp}/use_term</arg>
			
			<arg>inpath=${outputTmp}/tdim_term_prod</arg>
			<arg>inpathR=${outputTmp}/user_use, ${outputTmp}/tourist_use</arg>

			<arg>mapCols= TERM_PROD_ID, TERM_PROD_NAME</arg>
			<arg>mapKeys= TERM_PROD_ID</arg>
			<arg>mapVals= TERM_PROD_NAME</arg>

			<arg>mapRCols= STATIS_DAY, CONTENT_ID, TERM_PROD_ID, SERV_NUMBER, 
							USE_DUR, USE_FLOW, USE_PV
			</arg>
			<arg>mapRKeys= TERM_PROD_ID</arg>
			<arg>mapRVals= STATIS_DAY, SERV_NUMBER, CONTENT_ID, USE_DUR, USE_FLOW, USE_PV</arg>
			<capture-output />
		</java>
		<ok to="use_content" />
		<error to="fail" />
	</action>	
	
	<!-- use_content: 
	${outputTmp}/use_content
	 CONTENT_ID, PROGRAM_ID,
	 STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, USE_DUR, USE_FLOW, USE_PV
	-->
	<action name="use_content">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${outputTmp}/use_content" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queue}</value>
				</property>
				<property>
					<name>mapred.child.java.opts</name>
					<value>-Xmx1024m</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>1</value>
				</property>
				<property>
					<name>NameNode</name>
					<value>${nameNode}</value>
				</property>
			</configuration>
			<main-class>com.mganaly.utils.MainRunner</main-class>
			<arg>inner_join_tool</arg>
			<arg>redNum=68</arg>
			<arg>outpath=${outputTmp}/use_content</arg>
			
			<arg>inpath=${outputTmp}/tdim_sinc_cont_prog</arg>
			<arg>inpathR=${outputTmp}/use_term</arg>

			<arg>mapCols= CONTENT_ID, SIN_CONTENT_ID, PROGRAM_ID, PROGRAM_NAME</arg>
			<arg>mapKeys= SIN_CONTENT_ID</arg>
			<arg>mapVals= PROGRAM_ID</arg>

			<arg>mapRCols= TERM_PROD_ID, TERM_PROD_NAME,
							STATIS_DAY, SERV_NUMBER, CONTENT_ID, USE_DUR, USE_FLOW, USE_PV	
			</arg>
			<arg>mapRKeys= CONTENT_ID</arg>
			<arg>mapRVals= STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, USE_DUR, USE_FLOW, USE_PV</arg>
			<capture-output />
		</java>
		<ok to="use_content_nodrama" />
		<error to="fail" />
	</action>
	
	<!-- use_content_nodrama: 
	${outputTmp}/use_content_nodrama
	 CONTENT_ID, PROGRAM_ID,
	 STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, USE_DUR, USE_FLOW, USE_PV
	-->
	<action name="use_content_nodrama">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${outputTmp}/use_content_nodrama" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queue}</value>
				</property>
				<property>
					<name>mapred.child.java.opts</name>
					<value>-Xmx1024m</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>1</value>
				</property>
				<property>
					<name>NameNode</name>
					<value>${nameNode}</value>
				</property>
			</configuration>
			<main-class>com.mganaly.utils.MainRunner</main-class>
			<arg>inner_join_tool</arg>
			<arg>redNum=68</arg>
			<arg>outpath=${outputTmp}/use_content_nodrama</arg>
			
			<arg>inpath=${outputTmp}/tdim_program_content</arg>
			<arg>inpathR=${outputTmp}/use_term</arg>

			<arg>mapCols= PROGRAM_ID, PROGRAM_NAME, CONTENT_ID</arg>
			<arg>mapKeys= CONTENT_ID</arg>
			<arg>mapVals= PROGRAM_ID</arg>

			<arg>mapRCols= TERM_PROD_ID, TERM_PROD_NAME,
							STATIS_DAY, SERV_NUMBER, CONTENT_ID, USE_DUR, USE_FLOW, USE_PV	
			</arg>
			<arg>mapRKeys= CONTENT_ID</arg>
			<arg>mapRVals= STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, USE_DUR, USE_FLOW, USE_PV</arg>
			<capture-output />
		</java>
		<ok to="join_use_visit_cont" />
		<error to="fail" />
	</action>
	
	<!-- visit_term: 
	${outputTmp}/visit_term
	 TERM_PROD_ID, TERM_PROD_NAME,
	 STATIS_DAY, SERV_NUMBER, SUP_POSE_ID, PROGRAM_ID, VISIT_PV
	-->
	<action name="visit_term">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${outputTmp}/visit_term" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queue}</value>
				</property>
				<property>
					<name>mapred.child.java.opts</name>
					<value>-Xmx1024m</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>1</value>
				</property>
				<property>
					<name>NameNode</name>
					<value>${nameNode}</value>
				</property>
			</configuration>
			<main-class>com.mganaly.utils.MainRunner</main-class>
			<arg>map_join_tool</arg>
			<arg>outpath=${outputTmp}/visit_term</arg>
			
			<arg>inpath=${outputTmp}/tdim_term_prod</arg>
			<arg>inpathR=${outputTmp}/user_visit, ${outputTmp}/tourist_visit</arg>

			<arg>mapCols= TERM_PROD_ID, TERM_PROD_NAME</arg>
			<arg>mapKeys= TERM_PROD_ID</arg>
			<arg>mapVals= TERM_PROD_NAME</arg>

			<arg>mapRCols= STATIS_DAY, SUP_POSE_ID, PROGRAM_ID, TERM_PROD_ID, SERV_NUMBER, VISIT_PV
			</arg>
			<arg>mapRKeys= TERM_PROD_ID</arg>
			<arg>mapRVals= STATIS_DAY, SERV_NUMBER, SUP_POSE_ID, PROGRAM_ID, VISIT_PV</arg>
			<capture-output />
		</java>
		<ok to="visit_page" />
		<error to="fail" />
	</action>
	
	<!-- visit_page: 
	${outputTmp}/visit_page
	 POSE_ID, PAGE_ID, PAGE_NAME, POSE_NAME,
	 STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, PROGRAM_ID, VISIT_PV
	-->
	<action name="visit_page">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${outputTmp}/visit_page" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queue}</value>
				</property>
				<property>
					<name>mapred.child.java.opts</name>
					<value>-Xmx1024m</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>1</value>
				</property>
				<property>
					<name>NameNode</name>
					<value>${nameNode}</value>
				</property>
			</configuration>
			<main-class>com.mganaly.utils.MainRunner</main-class>
			<arg>map_join_tool</arg>
			<arg>redNum=1</arg>
			<arg>outpath=${outputTmp}/visit_page</arg>
			
			<arg>inpath=${outputTmp}/tdim_page_name_pose</arg>
			<arg>inpathR=${outputTmp}/visit_term</arg>

			<arg>mapCols= PAGE_ID, PAGE_NAME, SHOW_OBJ_ID, SHOW_OBJ_NAME</arg>
			<arg>mapKeys= SHOW_OBJ_ID</arg>
			<arg>mapVals= PAGE_ID, PAGE_NAME, SHOW_OBJ_NAME</arg>

			<arg>mapRCols=TERM_PROD_ID, TERM_PROD_NAME,
							STATIS_DAY, SERV_NUMBER, SUP_POSE_ID, PROGRAM_ID, VISIT_PV
			</arg>
			<arg>mapRKeys= SUP_POSE_ID</arg>
			<arg>mapRVals= STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, PROGRAM_ID, VISIT_PV</arg>
			<capture-output />
		</java>
		<ok to="visit_pagenm" />
		<error to="fail" />
	</action>
	
	<!-- visit_pagenm: 
	${outputTmp}/visit_pagenm
	 PROGRAM_ID, PROGRAM_NAME,
	 POSE_ID, PAGE_ID, PAGE_NAME, POSE_NAME, STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, VISIT_PV
	-->
	<action name="visit_pagenm">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${outputTmp}/visit_pagenm" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queue}</value>
				</property>
				<property>
					<name>mapred.child.java.opts</name>
					<value>-Xmx1024m</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>1</value>
				</property>
				<property>
					<name>NameNode</name>
					<value>${nameNode}</value>
				</property>
			</configuration>
			<main-class>com.mganaly.utils.MainRunner</main-class>
			<arg>inner_join_tool</arg>
			<arg>outpath=${outputTmp}/visit_pagenm</arg>
			
			<arg>inpath=${outputTmp}/tdim_sinc_cont_prog</arg>
			<arg>inpathR=${outputTmp}/visit_page</arg>

			<arg>mapCols= CONTENT_ID, SIN_CONTENT_ID, PROGRAM_ID, PROGRAM_NAME</arg>
			<arg>mapKeys= PROGRAM_ID</arg>
			<arg>mapVals= PROGRAM_NAME</arg>

			<arg>mapRCols= POSE_ID, PAGE_ID, PAGE_NAME, POSE_NAME,
							STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, PROGRAM_ID, VISIT_PV
			</arg>
			<arg>mapRKeys= PROGRAM_ID</arg>
			<arg>mapRVals= POSE_ID, PAGE_ID, PAGE_NAME, POSE_NAME, STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, VISIT_PV</arg>
			<capture-output />
		</java>
		<ok to="visit_pagenm_nodrama" />
		<error to="fail" />
	</action>
	
	
	<!-- visit_pagenm_nodrama: 
	${outputTmp}/visit_pagenm_nodrama
	 PROGRAM_ID, PROGRAM_NAME,
	 POSE_ID, PAGE_ID, PAGE_NAME, POSE_NAME, STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, VISIT_PV
	-->
	<action name="visit_pagenm_nodrama">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${outputTmp}/visit_pagenm_nodrama" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queue}</value>
				</property>
				<property>
					<name>mapred.child.java.opts</name>
					<value>-Xmx1024m</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>1</value>
				</property>
				<property>
					<name>NameNode</name>
					<value>${nameNode}</value>
				</property>
			</configuration>
			<main-class>com.mganaly.utils.MainRunner</main-class>
			<arg>inner_join_tool</arg>
			<arg>outpath=${outputTmp}/visit_pagenm_nodrama</arg>
			
			<arg>inpath=${outputTmp}/tdim_program_content</arg>
			<arg>inpathR=${outputTmp}/visit_page</arg>

			<arg>mapCols= PROGRAM_ID, PROGRAM_NAME, CONTENT_ID</arg>
			<arg>mapKeys= PROGRAM_ID</arg>
			<arg>mapVals= PROGRAM_NAME</arg>

			<arg>mapRCols= POSE_ID, PAGE_ID, PAGE_NAME, POSE_NAME,
							STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, PROGRAM_ID, VISIT_PV
			</arg>
			<arg>mapRKeys= PROGRAM_ID</arg>
			<arg>mapRVals= POSE_ID, PAGE_ID, PAGE_NAME, POSE_NAME, STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, VISIT_PV</arg>
			<capture-output />
		</java>
		<ok to="join_use_visit_cont" />
		<error to="fail" />
	</action>
	
	<join name="join_use_visit_cont" to="prog_visit_use" />
	
	<!-- prog_visit_use: 
	${outputTmp}/prog_visit_use
	 STATIS_DAY, PROGRAM_ID, TERM_PROD_NAME, SERV_NUMBER,
	 PROGRAM_NAME, PAGE_ID, POSE_ID, PAGE_NAME, POSE_NAME, VISIT_PV, USE_DUR, USE_FLOW, USE_PV
	-->
	<action name="prog_visit_use">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${outputTmp}/prog_visit_use" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queue}</value>
				</property>
				<property>
					<name>mapred.child.java.opts</name>
					<value>-Xmx1024m</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>1</value>
				</property>
				<property>
					<name>NameNode</name>
					<value>${nameNode}</value>
				</property>
			</configuration>
			<main-class>com.mganaly.utils.MainRunner</main-class>
			<arg>left_join_tool</arg>
			<arg>outpath=${outputTmp}/prog_visit_use</arg>
			
			<arg>inpath=${outputTmp}/visit_pagenm, ${outputTmp}/visit_pagenm_nodrama</arg>
			<arg>inpathR=${outputTmp}/use_content, ${outputTmp}/use_content_nodrama</arg>
			
			<arg>mapCols= PROGRAM_ID, PROGRAM_NAME, POSE_ID, PAGE_ID, PAGE_NAME, POSE_NAME, STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, VISIT_PV
			</arg>
			<arg>mapKeys= STATIS_DAY, PROGRAM_ID, TERM_PROD_NAME, SERV_NUMBER</arg>
			<arg>mapVals= PROGRAM_NAME, PAGE_ID, POSE_ID, PAGE_NAME, POSE_NAME, VISIT_PV</arg>

			<arg>mapRCols=CONTENT_ID, PROGRAM_ID,
							STATIS_DAY, TERM_PROD_NAME, SERV_NUMBER, USE_DUR, USE_FLOW, USE_PV
			</arg>
			<arg>mapRKeys= STATIS_DAY, PROGRAM_ID, TERM_PROD_NAME, SERV_NUMBER</arg>
			<arg>mapRVals= USE_DUR, USE_FLOW, USE_PV</arg>

			<capture-output />
		</java>
		<ok to="fork_page_pose_content" />
		<error to="fail" />
	</action>
	
	<!--
	<join name="join_page_pose_content" to=" " />
	-->
	<fork name="fork_page_pose_content">
		<path start="page_pose_content_visit" />
		<path start="page_pose_content_use" />
	</fork>
	
	<!--page_pose_content_visit : 
	TERM_PROD_NAME, POSE_ID, POSE_NAME, PAGE_ID, PAGE_NAME, STATIS_DAY, CONTENT_ID, PROGRAM_NAME,
	VISIT_UV, VISIT_PV
	-->
	<action name="page_pose_content_visit">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${outputTmp}/page_pose_content_visit" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queue}</value>
				</property>
				<property>
					<name>mapred.child.java.opts</name>
					<value>-Xmx1024m</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>1</value>
				</property>
				<property>
					<name>NameNode</name>
					<value>${nameNode}</value>
				</property>
			</configuration>
			<main-class>com.mganaly.utils.MainRunner</main-class>
			<arg>mr_general_tool</arg>
			<arg>outpath=${outputTmp}/page_pose_content_visit</arg>
			
			<arg>inpath=${outputTmp}/prog_visit_use</arg>
			
			<arg>mapCols=STATIS_DAY, PROGRAM_ID, TERM_PROD_NAME, SERV_NUMBER,
	 PROGRAM_NAME, PAGE_ID, POSE_ID, PAGE_NAME, POSE_NAME, VISIT_PV, USE_DUR, USE_FLOW, USE_PV
			</arg>
				
			<arg>mapKeys= TERM_PROD_NAME, POSE_ID, POSE_NAME, PAGE_ID, PAGE_NAME, STATIS_DAY, PROGRAM_ID, PROGRAM_NAME</arg>
			<arg>mapVals= SERV_NUMBER, VISIT_PV</arg>
			<arg>redVals= CNT:SERV_NUMBER, SUM:VISIT_PV</arg>
			<capture-output />
		</java>
		<ok to="join_page_pose_content" />
		<error to="fail" />
	</action>
	
	<!--page_pose_content_visit : 
	TERM_PROD_NAME, POSE_ID, POSE_NAME, PAGE_ID, PAGE_NAME, STATIS_DAY, CONTENT_ID, PROGRAM_NAME,
	USE_UV, USE_PV, USE_DUR, USE_FLOW
	-->
	<action name="page_pose_content_use">
		<java>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${outputTmp}/page_pose_content_use" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.job.queue.name</name>
					<value>${queue}</value>
				</property>
				<property>
					<name>mapred.child.java.opts</name>
					<value>-Xmx1024m</value>
				</property>
				<property>
					<name>mapred.reduce.tasks</name>
					<value>1</value>
				</property>
				<property>
					<name>NameNode</name>
					<value>${nameNode}</value>
				</property>
			</configuration>
			<main-class>com.mganaly.utils.MainRunner</main-class>
			<arg>mr_general_tool</arg>
			<arg>outpath=${outputTmp}/page_pose_content_use</arg>
			
			<arg>inpath=${outputTmp}/prog_visit_use</arg>
			
			<arg>mapCols=STATIS_DAY, PROGRAM_ID, TERM_PROD_NAME, SERV_NUMBER,
						PROGRAM_NAME, PAGE_ID, POSE_ID, PAGE_NAME, POSE_NAME, VISIT_PV, USE_DUR, USE_FLOW, USEPV
			</arg>
				
			<arg>mapKeys= TERM_PROD_NAME, POSE_ID, POSE_NAME, PAGE_ID, PAGE_NAME, STATIS_DAY, PROGRAM_ID, PROGRAM_NAME</arg>
			<arg>mapVals= SERV_NUMBER, 		FILTER:USEPV_string_NEQ_NULL, 	USE_DUR, 	 USE_FLOW</arg>
			<arg>redVals= CNT:SERV_NUMBER, 	SUM:USEPV_string_NEQ_NULL, 			SUM:USE_DUR, SUM:USE_FLOW</arg>
			<capture-output />
		</java>
		<ok to="join_page_pose_content" />
		<error to="fail" />
	</action>
	
	<join name="join_page_pose_content" to="end" />
	
	
	<kill name="fail">
		<message>Failed, error message[${wf:errorMessage(wf:lastErrorNode())}]
		</message>
	</kill>

	<end name="end" />
</workflow-app>
