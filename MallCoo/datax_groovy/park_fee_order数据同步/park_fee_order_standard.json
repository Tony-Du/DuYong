{
    "job": {
        "content": [{
            "reader": {
                "name": "mongodbreader", 
                "parameter": {
                    "collectionName": "ParkFeeOrder",                                                    
                    "column": [                                                 
                        { "name": "_id", "type":"bigint" },                      
                        { "name": "Flag", "type":"string" },                     
                        { "name": "OrderNo", "type":"string" },                  
                        { "name": "UID", "type":"string" },                      
                        { "name": "ParkName", "type":"string" },
                        { "name": "PlateNo", "type":"string" },                  
                        { "name": "EntryTime", "type":"string" },
                        { "name": "LeaveTime", "type":"timestamp" },
                        { "name": "ParkingMinutes", "type":"int" },
                        { "name": "PayType", "type":"int" },
                        { "name": "Bonus", "type":"double" },                    
                        { "name": "BonusAmountOffset", "type":"double" },
                        { "name": "ParkingTotalFee", "type":"double" },
                        { "name": "MallID", "type":"string" },
                        { "name": "ParkingFee", "type":"double" },
                        { "name": "CreateTime", "type":"timestamp" },            
                        { "name": "Status", "type":"int" },
                        { "name": "MallTimeOffset", "type":"double" },
                        { "name": "MallAmountOffset", "type":"double" },
                        { "name": "MemberRightAmountOffset", "type":"double" },
                        { "name": "MemberRightTimeOffset", "type":"double" },    
                        { "name": "CouponTimeOffset", "type":"double" },         
                        { "name": "CouponAmountOffset", "type":"double" },
                        { "name": "OrderPrice", "type":"double" },
                        { "name": "FeeID", "type":"string" }    
                    ],                                                          
                    "dbName": "SP_Park",                                        
                    "url":"mongodb://sp1:28001,sp2:28001/SP_Park.ParkFeeOrder", 
                    "query":"{'_id':{ $gt:$start,$lte:$end }}"                  
                }                                                               
            },                                                                  
            "writer": {                                                         
                "name": "hdfswriter",                                           
                "parameter": {                                                  
                    "column": [                                                 
                        { "name": "id", "type":"bigint" },                      
                        { "name": "Flag", "type":"string" },                                        
                        { "name": "OrderNo", "type":"string" },                                     
                        { "name": "UID", "type":"string" },                                         
                        { "name": "ParkName", "type":"string" },
                        { "name": "PlateNo", "type":"string" },                        
                        { "name": "EntryTime", "type":"string" },
                        { "name": "LeaveTime", "type":"timestamp" },
                        { "name": "ParkingMinutes", "type":"int" },
                        { "name": "PayType", "type":"int" },
                        { "name": "Bonus", "type":"double" },                      
                        { "name": "BonusAmountOffset", "type":"double" },
                        { "name": "ParkingTotalFee", "type":"double" },
                        { "name": "MallID", "type":"string" },
                        { "name": "ParkingFee", "type":"double" },
                        { "name": "CreateTime", "type":"timestamp" },                        
                        { "name": "Status", "type":"int" },
                        { "name": "MallTimeOffset", "type":"double" },
                        { "name": "MallAmountOffset", "type":"double" },
                        { "name": "MemberRightAmountOffset", "type":"double" },
                        { "name": "MemberRightTimeOffset", "type":"double" },                       
                        { "name": "CouponTimeOffset", "type":"double" },                        
                        { "name": "CouponAmountOffset", "type":"double" },
                        { "name": "OrderPrice", "type":"double" },
                        { "name": "FeeID", "type":"string" }    
                    ], 
                    "defaultFS": "hdfs://hadoop000:9000",
                    "fieldDelimiter": "\1",
                    "fileName": "$filename",
                    "fileType": "orc",
                    "path": "/user/root/hive/online.db/parkfeeorder",
                    "writeMode": "append"
                }
            },
            "transformer": [
                { "name": "dx_groovy",
                  "parameter": { "code": "record.setColumn(1, new StringColumn(\"standard\")); 
				                          double bao_v = new BigDecimal(record.getColumn(11).asDouble()/100).setScale(4,BigDecimal.ROUND_HALF_UP).doubleValue();
										  double pt_v = new BigDecimal(record.getColumn(12).asDouble()/100).setScale(4,BigDecimal.ROUND_HALF_UP).doubleValue(); 
										  double op_v = new BigDecimal(record.getColumn(23).asDouble()/100).setScale(4,BigDecimal.ROUND_HALF_UP).doubleValue(); 
										  record.setColumn(11, new DoubleColumn(bao_v)); 
										  record.setColumn(12, new DoubleColumn(pt_v)); 
										  record.setColumn(14, new DoubleColumn(record.getColumn(14).asDouble()/100)); 
										  record.setColumn(18, new DoubleColumn(record.getColumn(18).asDouble()/100)); 
										  record.setColumn(19, new DoubleColumn(record.getColumn(19).asDouble()/100));
										  record.setColumn(22, new DoubleColumn(record.getColumn(22).asDouble()/100));
										  record.setColumn(23, new DoubleColumn(op_v));
										  return record;",                                
                                 "extraPackage":[ "import java.text.DecimalFormat;" ] 
                               }								 
                }
            ]
        }], 
        "setting": { "speed": { "channel": 4 } }
    }
}  
