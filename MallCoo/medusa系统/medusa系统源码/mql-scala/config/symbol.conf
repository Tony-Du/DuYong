symbol {
  must = AND
  should = OR
  equals = "#key#=#value#"
  notequals = "#key#<>#value#"
  contains = "instr(#key#,#value#)>0"
  notcontains = "instr(#key#,#value#)=0"
  regexmatch = "regexp_like(#key#,#value#)=TRUE"
  regexnotmatch = "regexp_like(#key#,#value#)=FALSE"
  hasvalue = "#key# IS NOT NULL"
  hasvaluewithoutempty = "(#key# IS NOT NULL AND trim(cast(#key# AS STRING))<>'')"
  novalue = "#key# IS NULL"
  lessthan = "#key#<#value#"
  lessthanorequals = "#key#<=#value#"
  greaterthan = "#key#>#value#"
  greaterthanorequals = "#key#>=#value#"
  inrange = "#key# BETWEEN #value# AND #value.1#"
  istrue = "#key#=TRUE"
  isfalse = "#key#=FALSE"
  in = "#key# IN (#tails#)"
  notin = "(#key# NOT IN (#tails#) OR #key# IS NULL)"
  datelessthan = "datediff(now(),#key#)<#value#"
  datelessthanorequals = "datediff(now(),#key#)<=#value#"
  dategreaterthan = "datediff(now(),#key#)>#value#"
  dategreaterthanorequals = "datediff(now(),#key#)>=#value#"
  dateequals = "datediff(now(),#key#)=#value#"
  datenotequals = "datediff(now(),#key#)<>#value#"
  dateinrange = "datediff(now(),#key#) BETWEEN #value# AND #value.1#"
  tageq = "udf.has(#key#,#value#) IS NOT NULL"
  tagexists = "udf.has(#key#,#values_comma#) IS NOT NULL"
  tagforall = "udf.has(#key#,#values_comma#)='#values_pipe_wq#'"
  tagne = "(udf.has(#key#,#values_comma#) IS NULL OR #key#='未知')"
  distance_range = "getdistance(cast(split_part(#key#,'_',1) as DOUBLE),cast(split_part(#key#,'_',2) as DOUBLE),#value.0#,#value.1#) BETWEEN #value.2# AND #value.3#"
  distance_gt = "getdistance(cast(split_part(#key#,'_',1) as DOUBLE),cast(split_part(#key#,'_',2) as DOUBLE),#value.0#,#value.1#)>#value.2#"
  distance_gte = "getdistance(cast(split_part(#key#,'_',1) as DOUBLE),cast(split_part(#key#,'_',2) as DOUBLE),#value.0#,#value.1#)>= #value.2#"
  distance_lt = "getdistance(cast(split_part(#key#,'_',1) as DOUBLE),cast(split_part(#key#,'_',2) as DOUBLE),#value.0#,#value.1#)<#value.2#"
  distance_lte = "getdistance(cast(split_part(#key#,'_',1) as DOUBLE),cast(split_part(#key#,'_',2) as DOUBLE),#value.0#,#value.1#)<=#value.2#"
  daysinrange = "#key# IS NOT NULL AND regexp_replace(#key#,'\\\\d{4}-(\\\\d{2})-(\\\\d{2})( \\\\d{2}:\\\\d{2}:\\\\d{2}.*)?','\\\\1\\\\2') BETWEEN #value# AND #value.1#"
}